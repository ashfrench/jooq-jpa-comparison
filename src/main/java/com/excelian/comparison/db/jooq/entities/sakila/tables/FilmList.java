/**
 * This class is generated by jOOQ
 */
package com.excelian.comparison.db.jooq.entities.sakila.tables;


import com.excelian.comparison.db.jooq.entities.sakila.Sakila;
import com.excelian.comparison.db.jooq.entities.sakila.enums.FilmListRating;
import com.excelian.comparison.db.jooq.entities.sakila.tables.records.FilmListRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmList extends TableImpl<FilmListRecord> {

    private static final long serialVersionUID = -1047975361;

    /**
     * The reference instance of <code>sakila.film_list</code>
     */
    public static final FilmList FILM_LIST = new FilmList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FilmListRecord> getRecordType() {
        return FilmListRecord.class;
    }

    /**
     * The column <code>sakila.film_list.FID</code>.
     */
    public final TableField<FilmListRecord, UShort> FID = createField("FID", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>sakila.film_list.title</code>.
     */
    public final TableField<FilmListRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>sakila.film_list.description</code>.
     */
    public final TableField<FilmListRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sakila.film_list.category</code>.
     */
    public final TableField<FilmListRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

    /**
     * The column <code>sakila.film_list.price</code>.
     */
    public final TableField<FilmListRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL.precision(4, 2).defaultValue(org.jooq.impl.DSL.inline("4.99", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>sakila.film_list.length</code>.
     */
    public final TableField<FilmListRecord, UShort> LENGTH = createField("length", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>sakila.film_list.rating</code>.
     */
    public final TableField<FilmListRecord, FilmListRating> RATING = createField("rating", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.excelian.comparison.db.jooq.entities.sakila.enums.FilmListRating.class), this, "");

    /**
     * The column <code>sakila.film_list.actors</code>.
     */
    public final TableField<FilmListRecord, String> ACTORS = createField("actors", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sakila.film_list</code> table reference
     */
    public FilmList() {
        this("film_list", null);
    }

    /**
     * Create an aliased <code>sakila.film_list</code> table reference
     */
    public FilmList(String alias) {
        this(alias, FILM_LIST);
    }

    private FilmList(String alias, Table<FilmListRecord> aliased) {
        this(alias, aliased, null);
    }

    private FilmList(String alias, Table<FilmListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sakila.SAKILA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FilmList as(String alias) {
        return new FilmList(alias, this);
    }

    /**
     * Rename this table
     */
    public FilmList rename(String name) {
        return new FilmList(name, null);
    }
}
